apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: training
  name: "{{ .Values.name }}-{{ .Values.version }}"
  labels:
    app: "{{ .Values.name }}"
    version: "{{ .Values.version }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Values.name }}"
      version: "{{ .Values.version }}"
  template:
    metadata:
      labels:
        app: "{{ .Values.name }}"
        version: "{{ .Values.version }}"
    spec:
      terminationGracePeriodSeconds: 0
      containers:
        - name: blue
          image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          tty: true
          stdin: true
          ports:
            - name: http
              containerPort: 8080
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 100m
              memory: 100Mi
          livenessProbe:
            httpGet:
              path: /liveness
              port: 8080
          readinessProbe:
            httpGet:
              path: /readiness
              port: 8080
          volumeMounts:
            - name: my-volume
              mountPath: /app/conf/
      volumes:
        - name: my-volume
          configMap:
            name: "{{ .Values.name }}-{{ .Values.version }}"
